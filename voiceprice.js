let basePrice = 0;
let urgent = false;
let isProcessing = false;
let currentAbortController = null; // –î–ª—è –æ—Ç–º–µ–Ω—ã –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤

// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
const manualInput = document.getElementById('manualInput');
const serviceSelect = document.getElementById('serviceSelect');
const fileLabel = document.getElementById('fileLabel');
const urgentToggle = document.getElementById('urgentToggle');
const resultBlock = document.getElementById('result');

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', {
  manualInput: !!manualInput,
  serviceSelect: !!serviceSelect,
  fileLabel: !!fileLabel,
  urgentToggle: !!urgentToggle,
  resultBlock: !!resultBlock
});

// ============================================
// –§–£–ù–ö–¶–ò–Ø RETRY –° –û–¢–ú–ï–ù–û–ô –ó–ê–ü–†–û–°–û–í
// ============================================
async function fetchWithRetry(url, options, retries = 3, externalSignal = null) {
  const requestId = Math.random().toString(36).substring(7);
  
  for (let i = 0; i < retries; i++) {
    try {
      console.log(`üîÑ [${requestId}] –ü–æ–ø—ã—Ç–∫–∞ ${i + 1}/${retries}`);
      console.log(`üì§ [${requestId}] URL:`, url);
      
      const startTime = Date.now();
      
      // –õ–æ–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —Ç–∞–π–º–∞—É—Ç–∞
      const controller = new AbortController();
      const signal = externalSignal || controller.signal;
      
      // –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏: 8 —Å–µ–∫—É–Ω–¥
      // –î–ª—è –≤—Ç–æ—Ä–æ–π –∏ —Ç—Ä–µ—Ç—å–µ–π: 15 —Å–µ–∫—É–Ω–¥
      const timeout = i === 0 ? 8000 : 15000;
      
      const timeoutId = setTimeout(() => {
        console.error(`‚è±Ô∏è [${requestId}] –¢–∞–π–º–∞—É—Ç –ø–æ—Å–ª–µ ${timeout/1000} —Å–µ–∫`);
        if (!externalSignal) controller.abort();
      }, timeout);
      
      const response = await fetch(url, {
        ...options,
        signal: signal,
        mode: 'cors',
        credentials: 'omit',
        keepalive: false
      });
      
      clearTimeout(timeoutId);
      
      const duration = Date.now() - startTime;
      console.log(`‚è±Ô∏è [${requestId}] –û—Ç–≤–µ—Ç –∑–∞ ${duration}ms, —Å—Ç–∞—Ç—É—Å: ${response.status}`);
      
      // –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –±—ã–ª –º–µ–¥–ª–µ–Ω–Ω—ã–º (>5 —Å–µ–∫), –ª–æ–≥–∏—Ä—É–µ–º —ç—Ç–æ
      if (i === 0 && duration > 5000) {
        console.warn(`üêå [${requestId}] –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –º–µ–¥–ª–µ–Ω–Ω—ã–π: ${duration}ms (—Å–µ—Ä–≤–µ—Ä —Å–ø–∞–ª?)`);
      }
      
      if (!response.ok) {
        const errorText = await response.text();
        console.error(`‚ùå [${requestId}] –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:`, errorText);
        throw new Error(`HTTP ${response.status}: ${errorText}`);
      }
      
      const data = await response.json();
      console.log(`‚úÖ [${requestId}] –£—Å–ø–µ—Ö:`, data);
      
      return {
        ok: true,
        status: response.status,
        data: data,
        json: async () => data
      };
      
    } catch (error) {
      if (error.name === 'AbortError') {
        console.log(`üõë [${requestId}] –ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω (—Ç–∞–π–º–∞—É—Ç)`);
        
        // –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª –ø–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏ –æ–Ω –∑–∞–≤–∏—Å - retry —Å—Ä–∞–∑—É
        if (i === 0) {
          console.log(`üîÑ [${requestId}] –°–µ—Ä–≤–µ—Ä —Å–ø–∞–ª, –ø—Ä–æ–±—É–µ–º —Å—Ä–∞–∑—É —Å–Ω–æ–≤–∞...`);
          await new Promise(resolve => setTimeout(resolve, 500)); // –ü–∞—É–∑–∞ 0.5 —Å–µ–∫
          continue;
        }
        
        throw error;
      }
      
      console.error(`‚ùå [${requestId}] –ü–æ–ø—ã—Ç–∫–∞ ${i + 1} –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å:`, {
        name: error.name,
        message: error.message
      });
      
      if (i === retries - 1) {
        console.error(`üí• [${requestId}] –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã`);
        throw error;
      }
      
      // Exponential backoff: 1, 2, 4 —Å–µ–∫—É–Ω–¥—ã
      const delay = Math.min(1000 * Math.pow(2, i), 4000);
      console.log(`‚è≥ [${requestId}] –ñ–¥—ë–º ${delay}ms –ø–µ—Ä–µ–¥ retry...`);
      await new Promise(resolve => setTimeout(resolve, delay));
    }
  }
}

// ============================================
// –ü–ï–†–ï–ö–õ–Æ–ß–ê–¢–ï–õ–¨ –°–†–û–ß–ù–û–°–¢–ò
// ============================================
window.calcToggleUrgent = function() {
  if (!urgentToggle || !manualInput) {
    console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è toggleUrgent');
    return;
  }
  
  urgent = !urgent;
  urgentToggle.classList.toggle('active', urgent);
  
  if (manualInput.value && parseInt(manualInput.value) > 0) {
    calculate();
  }
}

// –î–û–ë–ê–í–ò–¢–¨ –≠–¢–£ –°–¢–†–û–ö–£ –î–õ–Ø –û–ë–†–ê–¢–ù–û–ô –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò
window.toggleUrgent = window.calcToggleUrgent;

// ============================================
// –ü–û–î–°–ö–ê–ó–ö–ò –î–õ–Ø –£–°–õ–£–ì
// ============================================
const serviceTips = {
  "voice_text": "‚ö° –ó–∞–≥—Ä—É–∑–∏—Ç–µ txt –∏–ª–∏ docx, –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –¥–ª—è –æ–∑–≤—É—á–∫–∏. –í—Å–µ —á–∏—Å–ª–∞, —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –∏ –µ–¥–∏–Ω–∏—Ü—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–∏—Å–∞–Ω—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é ‚Äî —Ç–∞–∫, –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –∏—Ö –ø—Ä–æ–∏–∑–Ω–µ—Å–ª–∏. –ù–∞–ø—Ä–∏–º–µ—Ä: 32 –º - —Ç—Ä–∏–¥—Ü–∞—Ç—å –¥–≤–∞ –º–µ—Ç—Ä–∞",
  "voice_video": "‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–æ–¥–∏—Ç—å —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É. 6 –º–∏–Ω—É—Ç 3 —Å–µ–∫—É–Ω–¥—ã => 7 –º–∏–Ω—É—Ç",
  "translate_text": "üìö –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏–ª–∏ –ø–µ—Ä–µ—Ç—è–Ω–∏—Ç–µ —Å—é–¥–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç (txt, docx) –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞.",
  "translate_voice": "üåç –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–æ–¥–∏—Ç—å —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É. 6 –º–∏–Ω—É—Ç 3 —Å–µ–∫—É–Ω–¥—ã => 7 –º–∏–Ω—É—Ç",
  "voice_camera": "üìπ –ó–∞–≥—Ä—É–∑–∏—Ç–µ txt –∏–ª–∏ docx, –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –¥–ª—è –æ–∑–≤—É—á–∫–∏. –í—Å–µ —á–∏—Å–ª–∞, —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –∏ –µ–¥–∏–Ω–∏—Ü—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–∏—Å–∞–Ω—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é ‚Äî —Ç–∞–∫, –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –∏—Ö –ø—Ä–æ–∏–∑–Ω–µ—Å–ª–∏. –ù–∞–ø—Ä–∏–º–µ—Ä: 120 –∫–º ‚Üí —Å—Ç–æ –¥–≤–∞–¥—Ü–∞—Ç—å –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤."
};

function updateUI() {
  if (!serviceSelect || !manualInput) {
    console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ updateUI');
    return;
  }
  
  const allowFile = ['voice_text', 'translate_text', 'voice_camera'].includes(serviceSelect.value);
  const fileWrapper = document.getElementById("fileWrapper");
  
  if (fileWrapper) {
    fileWrapper.classList.toggle('hidden', !allowFile);
  }

  const ph = {
    'voice_text': '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤',
    'voice_video': '–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ (–º–∏–Ω—É—Ç—ã)',
    'translate_text': '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤',
    'translate_voice': '–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ (–º–∏–Ω—É—Ç—ã)',
    'voice_camera': '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤'
  };
  
  manualInput.placeholder = ph[serviceSelect.value] || '–í–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é';
  
  const tooltipText = document.getElementById('tooltipText');
  if (tooltipText) {
    tooltipText.classList.add('fade-out');
    
    setTimeout(() => {
      tooltipText.textContent = serviceTips[serviceSelect.value] || "";
      tooltipText.classList.remove('fade-out');
    }, 300);
  }
  
  manualInput.value = '';
}

if (serviceSelect) {
  serviceSelect.addEventListener('change', updateUI);
}

// ============================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï
// ============================================
document.addEventListener("DOMContentLoaded", () => {
  updateUI();

// ============================================
// ENTER –î–õ–Ø –†–ê–°–ß–Å–¢–ê
// ============================================
  if (manualInput) {
    manualInput.addEventListener('keypress', function(event) {
      if (event.key === 'Enter') {
        event.preventDefault();
        console.log('‚å®Ô∏è Enter –Ω–∞–∂–∞—Ç, –∑–∞–ø—É—Å–∫–∞–µ–º calculate()');
        calculate();
      }
    });
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º keydown (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    manualInput.addEventListener('keydown', function(event) {
      if (event.key === 'Enter') {
        event.preventDefault();
        console.log('‚å®Ô∏è Enter (keydown) –Ω–∞–∂–∞—Ç, –∑–∞–ø—É—Å–∫–∞–µ–º calculate()');
        calculate();
      }
    });
    
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ Enter –¥–æ–±–∞–≤–ª–µ–Ω—ã');
  } else {
    console.error('‚ùå manualInput –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è Enter');
  }
  
  // ============================================
  // DRAG AND DROP (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM)
  // ============================================
  const dropZone = document.querySelector('.calculator-wrapper');
  const dropOverlay = document.getElementById('dropOverlay');
  let dragCounter = 0;

  console.log('üéØ Drag and Drop —ç–ª–µ–º–µ–Ω—Ç—ã:', {
    dropZone: dropZone,
    dropOverlay: dropOverlay
  });

  if (dropZone && dropOverlay) {
    console.log('‚úÖ Drag and Drop –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
    dropZone.addEventListener('dragenter', (e) => {
      e.preventDefault();
      e.stopPropagation();
      dragCounter++;
      console.log('üì• dragenter, counter:', dragCounter);
      dropOverlay.classList.add('active');
    });

    dropZone.addEventListener('dragleave', (e) => {
      e.preventDefault();
      e.stopPropagation();
      dragCounter--;
      console.log('üì§ dragleave, counter:', dragCounter);
      if (dragCounter === 0) {
        dropOverlay.classList.remove('active');
      }
    });

    dropZone.addEventListener('dragover', (e) => {
      e.preventDefault();
      e.stopPropagation();
    });

    dropZone.addEventListener('drop', async (e) => {
      e.preventDefault();
      e.stopPropagation();
      dragCounter = 0;
      console.log('üì¶ drop —Å–æ–±—ã—Ç–∏–µ');
      dropOverlay.classList.remove('active');

      const file = e.dataTransfer.files[0];
      console.log('üìÑ –§–∞–π–ª:', file?.name, file?.type);
      
      if (!file || !['text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'].includes(file.type)) {
        alert('–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ .txt –∏ .docx');
        return;
      }

      if (serviceSelect && !['voice_text', 'translate_text', 'voice_camera'].includes(serviceSelect.value)) {
        serviceSelect.value = 'voice_text';
        updateUI();
      }

      const fileInput = document.getElementById('fileInput');
      if (fileInput) {
        fileInput.files = e.dataTransfer.files;
        handleFile({ target: { files: e.dataTransfer.files } });
      } else {
        console.error('‚ùå fileInput –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ drop');
      }
    });
  } else {
    console.error('‚ùå Drag and Drop –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', {
      dropZone: !!dropZone,
      dropOverlay: !!dropOverlay
    });
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ —Ñ—É—Ç–µ—Ä–µ
  setTimeout(() => {
    const dateSpan = document.getElementById('currentDate');
    console.log('üóìÔ∏è –≠–ª–µ–º–µ–Ω—Ç –¥–∞—Ç—ã:', dateSpan);
    
    if (dateSpan) {
      const today = new Date();
      const formatted = today.toLocaleDateString('ru-RU', { 
        day: '2-digit', 
        month: '2-digit', 
        year: 'numeric' 
      });
      console.log('üìÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É:', formatted);
      dateSpan.textContent = formatted;
    } else {
      console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç currentDate –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  }, 100);
});

// ============================================
// FILE INPUT
// ============================================
const fileInput = document.getElementById('fileInput');
if (fileInput) {
  fileInput.addEventListener('change', handleFile);
} else {
  console.error('‚ùå fileInput –Ω–µ –Ω–∞–π–¥–µ–Ω');
}

// ============================================
// –û–ë–†–ê–ë–û–¢–ö–ê –§–ê–ô–õ–ê
// ============================================
function handleFile(e) {
  if (isProcessing) {
    console.log('‚è≥ –£–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —Ñ–∞–π–ª...');
    return;
  }
  
  const file = e.target.files[0];
  if (!file) return;

  if (!fileLabel || !resultBlock) {
    console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ handleFile');
    return;
  }

  isProcessing = true;

  const icon = fileLabel.querySelector('.icon');
  const loader = fileLabel.querySelector('.loader');
  
  if (icon) icon.classList.add('hidden');
  if (loader) loader.classList.remove('hidden');

const done = async (text) => {
  try {
    console.log('üìÑ –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–ª–æ–≤–∞/—Å–∏–º–≤–æ–ª—ã...');
    const count = await countBackend(text);
    
    // –°–†–ê–ó–£ –£–ë–ò–†–ê–ï–ú –°–ü–ò–ù–ù–ï–† –ü–û–°–õ–ï –ü–û–î–°–ß–Å–¢–ê
    if (icon) icon.classList.remove('hidden');
    if (loader) loader.classList.add('hidden');
    
    if (!isNaN(count) && count >= 1) {
      if (manualInput) manualInput.value = count;
            
      // –°–ë–†–ê–°–´–í–ê–ï–ú –§–õ–ê–ì –ü–ï–†–ï–î –í–´–ó–û–í–û–ú calculate()
      isProcessing = false;
      
      console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º calculate()');
      calculate();
    } else {
      if (manualInput) manualInput.value = 0;
      alert("–§–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞!");
      isProcessing = false;
    }
  } catch (err) {
    // –ü—Ä–∏ –æ—à–∏–±–∫–µ —Ç–æ–∂–µ —É–±–∏—Ä–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä
    if (icon) icon.classList.remove('hidden');
    if (loader) loader.classList.add('hidden');
    
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:', err);
    alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á—ë—Ç–µ —Å–ª–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª.");
    isProcessing = false;
  }
};

  const fail = (msg) => {
    if (icon) icon.classList.remove('hidden');
    if (loader) loader.classList.add('hidden');
    alert(msg);
    isProcessing = false;
  };

  if (file.name.endsWith('.txt')) {
    const reader = new FileReader();
    reader.onload = function (event) {
      const text = event.target.result;
      const looksBroken = text.includes("ÔøΩ") || text.length < 100;

      if (looksBroken) {
        const fallbackReader = new FileReader();
        fallbackReader.onload = function (e) {
          const recoveredText = e.target.result;
          done(recoveredText);
        };
        fallbackReader.onerror = () => fail("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å .txt —Ñ–∞–π–ª (–∫–æ–¥–∏—Ä–æ–≤–∫–∞).");
        fallbackReader.readAsText(file, 'windows-1251');
      } else {
        done(text);
      }
    };
    reader.onerror = () => fail("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å .txt —Ñ–∞–π–ª.");
    reader.readAsText(file);
  } else if (file.name.endsWith('.docx')) {
    const reader = new FileReader();
    reader.onload = function (event) {
      mammoth.extractRawText({ arrayBuffer: event.target.result })
        .then(result => {
          const text = result.value || '';
          done(text);
        })
        .catch(err => {
          fail("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç –∏–∑ .docx —Ñ–∞–π–ª–∞.");
        });
    };
    reader.onerror = () => fail("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å .docx —Ñ–∞–π–ª.");
    reader.readAsArrayBuffer(file);
  } else {
    fail("–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã .txt –∏ .docx");
  }
}

// ============================================
// –ü–û–î–°–ß–Å–¢ –°–õ–û–í/–°–ò–ú–í–û–õ–û–í –ù–ê –°–ï–†–í–ï–†–ï
// ============================================
async function countBackend(text) {
  if (!serviceSelect) {
    throw new Error('serviceSelect –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
  
  const service = serviceSelect.value;
  const url = service === 'translate_text'
    ? "https://telegram-voicebot.onrender.com/count_chars"
    : "https://telegram-voicebot.onrender.com/count_words";

  const response = await fetchWithRetry(url, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ text, service })
  }, 3);

  const data = await response.json();
  return service === 'translate_text' ? data.chars : data.words;
}

// ============================================
// –†–ê–°–ß–Å–¢ –°–¢–û–ò–ú–û–°–¢–ò
// ============================================
async function calculate() {
  if (isProcessing) {
    console.log('‚è≥ –£–∂–µ –∏–¥—ë—Ç —Ä–∞—Å—á—ë—Ç...');
    return;
  }

  if (!serviceSelect || !manualInput || !resultBlock) {
    console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ calculate');
    return;
  }

  // –û–¢–ú–ï–ù–Ø–ï–ú –ü–†–ï–î–´–î–£–©–ò–ô –ó–ê–ü–†–û–° –ï–°–õ–ò –ï–°–¢–¨
  if (currentAbortController) {
    console.log('üõë –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–ø—Ä–æ—Å');
    currentAbortController.abort();
    currentAbortController = null;
  }

  const service = serviceSelect.value;
  let value = parseInt(manualInput.value) || 0;

  const resultContent = resultBlock.querySelector('.result-content');
  
  if (!value || value <= 0) {
    if (resultContent) {
      resultContent.innerHTML = '<p style="color: #ff4444; text-align: center; margin: 0;">‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ</p>';
    }
    return;
  }

  isProcessing = true;
  
  // –°–û–ó–î–ê–Å–ú –ù–û–í–´–ô –ö–û–ù–¢–†–û–õ–õ–ï–†
  currentAbortController = new AbortController();
  
  // –ë–õ–û–ö–ò–†–£–ï–ú –ö–ù–û–ü–ö–£
  const calcButton = document.querySelector('button[onclick="calcCalculate()"]');
  if (calcButton) {
    calcButton.disabled = true;
    calcButton.style.opacity = '0.5';
    calcButton.style.cursor = 'not-allowed';
    calcButton.textContent = '–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º...';
  }

  if (resultContent) {
    resultContent.innerHTML = `
      <div class="spinner"></div>
      <div id="calc-loading-message" style="margin-top:12px;color:#888;text-align:center;">–°—á–∏—Ç–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å...</div>
      <div id="calc-loading-timer" style="margin-top:8px;color:#666;font-size:12px;text-align:center;">0 —Å–µ–∫</div>
    `;
  
    // –¢–∞–π–º–µ—Ä –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è
    let seconds = 0;
    const timerInterval = setInterval(() => {
      seconds++;
      const timerEl = document.getElementById('calc-loading-timer');
      const messageEl = document.getElementById('calc-loading-message');
    
      if (timerEl) {
        timerEl.textContent = `${seconds} —Å–µ–∫`;
      
        if (seconds >= 5 && messageEl) {
          messageEl.textContent = '–°–µ—Ä–≤–µ—Ä –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...';
          timerEl.style.color = '#ff9800';
        }
      
        if (seconds >= 10 && messageEl) {
          messageEl.textContent = '–°–µ—Ä–≤–µ—Ä –¥–æ–ª–≥–æ –æ—Ç–≤–µ—á–∞–µ—Ç, –∂–¥—ë–º...';
          timerEl.style.color = '#ff6b35';
        }
      }
    }, 1000);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
  window.calcTimerInterval = timerInterval;
}

  const payload = {
    service: service,
    text: value.toString(),
    is_urgent: urgent
  };

try {
  console.log('üí∞ –†–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏...', payload);
  console.log('üïê Timestamp:', new Date().toISOString());
  
  // –î–µ–ª–∞–µ–º –±—ã—Å—Ç—Ä—ã–π ping –ø–µ—Ä–µ–¥ –æ—Å–Ω–æ–≤–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
  const pingStart = Date.now();
  try {
    await fetch('https://telegram-voicebot.onrender.com/calculate', {
      method: 'HEAD',
      mode: 'no-cors',
      keepalive: false
    });
    console.log(`üèì Ping –∑–∞ ${Date.now() - pingStart}ms`);
  } catch (e) {
    console.log('üèì Ping failed (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)');
  }
  
  const response = await fetchWithRetry(
    "https://telegram-voicebot.onrender.com/calculate",
    {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload)
    },
    3,
    currentAbortController.signal
  );
    
  const response = await fetchWithRetry(
    "https://telegram-voicebot.onrender.com/calculate",
    {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload)
    },
    3,
    currentAbortController.signal // –ü–µ—Ä–µ–¥–∞—ë–º signal –¥–ª—è –æ—Ç–º–µ–Ω—ã
  );

  const data = await response.json();
  console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:', data);

  function secondsToTime(sec) {
    const m = Math.floor(sec / 60);
    const s = Math.round(sec % 60);
    return `${m}:${s < 10 ? '0' : ''}${s}`;
  }

    let serviceTitle = {
      'voice_text': "–û–∑–≤—É—á–∫–∞ —Ç–µ–∫—Å—Ç–∞",
      'voice_video': "–û–∑–≤—É—á–∫–∞ –≤–∏–¥–µ–æ",
      'translate_text': "–ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞",
      'translate_voice': "–ü–µ—Ä–µ–≤–æ–¥ + –æ–∑–≤—É—á–∫–∞ –≤–∏–¥–µ–æ",
      'voice_camera': "–û–∑–≤—É—á–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∫–∞–º–µ—Ä—É"
    }[service] || "";

    let resultText = ``;

    resultText += `
      <div class="result-row">
        <div class="icon">üì¶</div>
        <div class="label">–£—Å–ª—É–≥–∞:</div>
        <div class="value">${serviceTitle}${urgent ? " (–°–†–û–ß–ù–û)" : ""}</div>
      </div>
    `;

    if (service === 'voice_text' || service === 'voice_camera') {
      const words = data.word_count;
      const minutes = Math.ceil(words / 120);
      const optimal_time = secondsToTime(Math.round(words * 60 / 133));
      resultText += `
        <div class="result-row">
          <div class="icon">üìÑ</div>
          <div class="label">–°–ª–æ–≤:</div>
          <div class="value">${words}</div>
        </div>
        <div class="result-row">
          <div class="icon">üïë</div>
          <div class="label">–î–æ:</div>
          <div class="value">${minutes} –º–∏–Ω—É—Ç</div>
        </div>
        <div class="result-row">
          <div class="icon">üéØ</div>
          <div class="label">–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ö—Ä–æ–Ω–æ–º–µ—Ç—Ä–∞–∂:</div>
          <div class="value">${optimal_time}</div>
        </div>
      `;
    }

    if (service === 'voice_video' || service === 'translate_voice') {
      resultText += `
        <div class="result-row">
          <div class="icon">üïë</div>
          <div class="label">–î–æ:</div>
          <div class="value">${value} –º–∏–Ω—É—Ç</div>
        </div>
      `;
    }

    if (service === 'translate_text') {
      resultText += `
        <div class="result-row">
          <div class="icon">üìù</div>
          <div class="label">–ó–Ω–∞–∫–æ–≤ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤:</div>
          <div class="value">${value}</div>
        </div>
      `;
    }

    const deadline = urgent ? data.deadline_urgent : data.deadline;
    const match = deadline.match(/^(.+?) \(–¥–æ (.+?) –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ\)$/);

    let daysOnly = '';
    if (match?.[1]) {
      const num = parseInt(match[1]);
      if (!isNaN(num)) {
        daysOnly = num === 1 ? '1 –¥–µ–Ω—å' : `–¥–æ ${num} –¥–Ω–µ–π`;
      } else {
        daysOnly = `–¥–æ ${match[1]}`;
      }
    }

    const dateOnly = match?.[2] || "";

    resultText += `
      <div class="result-row">
        <div class="icon">‚è∞</div>
        <div class="label">–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</div>
        <div class="value">${daysOnly}</div>
      </div>
      <div class="result-row">
        <div class="icon">üìÖ</div>
        <div class="label">–î–µ–¥–ª–∞–π–Ω:</div>
        <div class="value">${dateOnly}</div>
      </div>
    `;

    resultText += `
      <div class="result-row">
        <div class="icon">üí∞</div>
        <div class="label">–°—Ç–æ–∏–º–æ—Å—Ç—å:</div>
        <div class="value">${
          urgent
            ? `${data.price_rub.toLocaleString('ru-RU')} ‚ÇΩ ‚û°Ô∏è ${data.price_rub_urgent.toLocaleString('ru-RU')} ‚ÇΩ`
            : `${data.price_rub.toLocaleString('ru-RU')} ‚ÇΩ`
        }</div>
      </div>
    `;

    setTimeout(() => {
      const resultContent = resultBlock.querySelector('.result-content');
      if (resultContent) {
        resultContent.innerHTML = resultText;
      }
    }, 600 + Math.random() * 400);

  } catch (error) {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç–º–µ–Ω—ã
    if (error.name === 'AbortError') {
      console.log('üõë –ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
      return;
    }
    
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á—ë—Ç–∞:', error);
    
    const resultContent = resultBlock.querySelector('.result-content');
    if (resultContent) {
      resultContent.innerHTML = `
        <p style="color: #ff4444; text-align: center; margin: 0;">
          ‚ùå –û—à–∏–±–∫–∞: ${error.message}
          <br><br>
          <button onclick="calculate()" style="padding: 8px 16px; background: var(--button-bg); border: none; color: white; border-radius: var(--radius); cursor: pointer;">
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </p>
      `;
    }
} finally {
  isProcessing = false;
  currentAbortController = null;
  
  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
  if (window.calcTimerInterval) {
    clearInterval(window.calcTimerInterval);
    window.calcTimerInterval = null;
  }
  
  // –†–ê–ó–ë–õ–û–ö–ò–†–£–ï–ú –ö–ù–û–ü–ö–£
  if (calcButton) {
    calcButton.disabled = false;
    calcButton.style.opacity = '1';
    calcButton.style.cursor = 'pointer';
    calcButton.textContent = '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å';
  }
}
}

// –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ
window.calcCalculate = calculate;
window.calculate = calculate;

// ============================================
// –û–ß–ò–°–¢–ö–ê –ü–†–ò –£–•–û–î–ï –°–û –°–¢–†–ê–ù–ò–¶–´
// ============================================
window.addEventListener('beforeunload', () => {
  if (currentAbortController) {
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞: –æ—Ç–º–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–æ–≤');
    currentAbortController.abort();
  }
});
// ============================================
// –ê–ö–¢–ò–í–ù–´–ô –ü–†–û–ì–†–ï–í –°–ï–†–í–ï–†–ê
// ============================================
let warmupInterval = null;

async function warmupServer() {
  try {
    console.log('üî• –ü—Ä–æ–≥—Ä–µ–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä...');
    const start = Date.now();
    
    await fetch('https://telegram-voicebot.onrender.com/calculate', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ 
        service: 'voice_text', 
        text: '100', 
        is_urgent: false 
      }),
      keepalive: false
    });
    
    const duration = Date.now() - start;
    console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –ø—Ä–æ–≥—Ä–µ—Ç –∑–∞ ${duration}ms`);
  } catch (error) {
    console.log('‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä —Å–ø–∏—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
  }
}

// –ü—Ä–æ–≥—Ä–µ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
warmupServer();

// –ü—Ä–æ–≥—Ä–µ–≤ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
warmupInterval = setInterval(() => {
  console.log('‚è∞ –ü–ª–∞–Ω–æ–≤—ã–π –ø—Ä–æ–≥—Ä–µ–≤ —Å–µ—Ä–≤–µ—Ä–∞...');
  warmupServer();
}, 5 * 60 * 1000); // 5 –º–∏–Ω—É—Ç

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–≥—Ä–µ–≤–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', () => {
  if (warmupInterval) {
    clearInterval(warmupInterval);
  }
  if (currentAbortController) {
    currentAbortController.abort();
  }
});
